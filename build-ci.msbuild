<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="" DefaultTargets="Build">
  <UsingTask
    AssemblyFile="3rdParty\xunit.runner.msbuild.dll"
    TaskName="Xunit.Runner.MSBuild.xunit"/>
  

  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <Configuration Condition=" $(Configuration) == '' ">Release</Configuration>
    <OutputFolder Condition=" '$(OutputFolder)' == '' ">.\Output\$(Configuration)</OutputFolder>
    <RunTests Condition=" '$(RunTests)' == '' ">True</RunTests>
  </PropertyGroup>
  
  <ItemDefinitionGroup />

  <ItemGroup>
    <ProjectReference Include="LBi.LostDoc.Core\LBi.LostDoc.Core.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>
    </ProjectReference>
    <ProjectReference Include="LBi.LostDoc.ConsoleApplication\LBi.LostDoc.ConsoleApplication.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>

    </ProjectReference>
    <ProjectReference Include="LBi.LostDoc.Core.Test\LBi.LostDoc.Core.Test.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>
    </ProjectReference>
    <ProjectReference Include="Company.Project.Service\Company.Project.Service.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>
    </ProjectReference>
    <ProjectReference Include="Company.Project.Library\Company.Project.Library.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>
    </ProjectReference>
    <ProjectReference Include="Company.Project.AnotherLibrary\Company.Project.AnotherLibrary.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <Configuration>$(Configuration)</Configuration>
      <Platform>$(Platform)</Platform>
    </ProjectReference>

  </ItemGroup>

  <Target Name="Build" Outputs="@(CollectedBuildOutput)">
    <ConvertToAbsolutePath AbsolutePaths="$(MSBuildProjectDirectory)" Paths="$(OutputFolder)">
      <Output TaskParameter="AbsolutePaths" PropertyName="AbsoluteOutputPath" />
    </ConvertToAbsolutePath>
     
    <RemoveDir Directories="$(AbsoluteOutputPath)">
      <Output TaskParameter="RemovedDirectories" PropertyName="RemovedDirectories" />
    </RemoveDir>
    
    <PropertyGroup>
      <TestOutputFolder>$(AbsoluteOutputPath)\TestResults</TestOutputFolder>
    </PropertyGroup>

    <MSBuild Projects="@(ProjectReference-&gt;Reverse())" Targets="Clean" BuildInParallel="True" Properties="SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" />

    <MSBuild Projects="@(ProjectReference)" BuildInParallel="True" Properties="SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath); Configuration=$(Configuration)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>

    <ItemGroup>
      <UnitTestAssemblies Include="%(CollectedBuildOutput.Identity)" Condition="'@(CollectedBuildOutput-&gt;EndsWith('Test.dll'))'=='True' "/>
    </ItemGroup>
    
    <Message text="UnitTestAssemblies: @(UnitTestAssemblies)"/>

    <xunit Assembly="@(UnitTestAssemblies)" />

    <MakeDir Directories="$(TestOutputFolder)">
      <Output TaskParameter="DirectoriesCreated" PropertyName="CreatedDirectories" />
    </MakeDir>

    <!--
    <Exec Condition="$(RunTests) == 'True'" IgnoreExitCode="true" Command="&quot;$(VS100COMNTOOLS)..\IDE\mstest.exe&quot; /testcontainer:@(UnitTestAssemblies, ' /testcontainer:') /resultsfile:$(TestOutputFolder)\TestResult.trx" />
    -->
    <!--
    <MSTest MSTestCommandLocation="$(VS100COMNTOOLS)..\IDE\mstest.exe" TestContainer="@(UnitTestAssemblies)" ResultsFile="$(TestOutputFolder)\TestResult.trx"/>

    <Message Text="##teamcity[importData type='mstest' path='$(TestOutputFolder)\TestResult.trx']"/>
-->


  <ItemGroup>
    <OutputFiles Include="$(MSBuildProjectDirectory)\LBi.LostDoc.ConsoleApplication\bin\$(Configuration)\*.*" />
  </ItemGroup>
  <Message text="Copying output files: @(OutputFiles)"/>
    <Copy SourceFiles="@(OutputFiles)" DestinationFolder="$(AbsoluteOutputPath)"></Copy>


  </Target>
</Project>
